<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Will Price</title>
 <link href="http://willprice.github.com/feed/" rel="self"/>
 <link href="http://willprice.github.com/feed/" />
 <updated>2012-08-12T14:33:39+01:00</updated>
 <id>http://willprice.github.com/</id>
 <author>
   <name>Recursive</name>
   <email>will.price94@gmail.com</email>
 </author>

 
 <entry>
   <title>Introduction to Jekyll</title>
   <link href="http://willprice.github.com/Technology/2012/08/12/introduction-to-jekyll.html"/>
   <updated>2012-08-12T00:00:00+01:00</updated>
   <id>http://willprice.github.com/Technology/2012/08/12/introduction-to-jekyll</id>
   <content type="html">&lt;p&gt;I first encountered Jekyll through github pages. I read that all git repositories are passed through jekyll and if they are either a valid jekyll or html site then that site can be published through github pages. This was my first misconception that left me confused as I thought that Jekyll was some server side program that you processed some text files, although it is in a sense it isn&amp;#8217;t true to the real workflow using jekyll.&lt;/p&gt;

&lt;p&gt;Jekyll is a program that generates a static html site from markdown pages using layouts you specify. I kind of like to think of it a control program that converts markdown to html, then structures that and runs a local http server so you can check out what your site looks like, finally you&amp;#8217;re left with a folder with your site in, you could setup your own website with the http root pointed at it, or upload it to github and enable github pages so that you can host it freely. This tutorial hopefully will give you a sense of jekyll works and what&amp;#8217;s what.&lt;/p&gt;

&lt;p&gt;Install Jekyll and other programs to begin with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ gem install jekyll rdiscount&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This installs jekyll and rdiscount, &lt;em&gt;a markdown converter&lt;/em&gt;. These programs are the utter basics we need to start playing around with jekyll, in a later guide I&amp;#8217;ll introduce some other programs.&lt;/p&gt;

&lt;p&gt;Create a directory in which you&amp;#8217;re going to make your site:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ mkdir jekyll_site
  $ cd jekyll_site&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Inside that folder we&amp;#8217;re going to create a folder called &amp;#8216;_layouts&amp;#8217;, &amp;#8216;_posts&amp;#8217; and &amp;#8216;css&amp;#8217;, these will hold virtually everything we need for our site. The website will need an &amp;#8216;index.html&amp;#8217;, which is what jekyll will initially point at when someone visits the site, it is our homepage.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ mkdir _layouts _posts css
  $ touch index.html _layouts/default.html _layouts/post.html css/screen.css _config.yml&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The layouts and homepage need to be created now before we can start writing anything in the &lt;em&gt;posts folder. In&lt;/em&gt;layouts/default.html type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Introduction to Jekyll&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h2&amp;gt;Introduction to Jekyll&amp;lt;/h2&amp;gt;
    &amp;lt;section&amp;gt;
    
    &amp;lt;/section&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The parts of the file bound in tags are &lt;a href='https://github.com/shopify/liquid/wiki/liquid-for-designers'&gt;Liquid Tags&lt;/a&gt;, they will be substituted by whatever variable is inserted into them, in this case we have &amp;#8216;page.title&amp;#8217; which is the title of the page defined in the YAML preamble (we&amp;#8217;ll get to this in a minute) and &amp;#8216;content&amp;#8217; which is a standard tag that is filled by the page content like index.html or a translated markdown post.&lt;/p&gt;

&lt;p&gt;We need to do something similar in &lt;em&gt;layouts/post.html&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ---
  layout: default
  ---&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the top part of the file where the hyphens and the title are located are processed by Jekyll is &lt;a href='https://github.com/mojombo/jekyll/wiki/liquid-extensions'&gt;YAML Front Matter&lt;/a&gt;,this sets some variables like the layout to use, in this case default.html is used, content will be substituted by the post content.&lt;/p&gt;

&lt;p&gt;Finally we need a homepage for our website which will be located in index.html, just something simple for the time being&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ---
  layout: default
  title: homepage
  ---

  &amp;lt;ul&amp;gt;
    ``
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Technology/2012/08/12/introduction-to-jekyll.html&amp;quot;&amp;gt;Introduction to Jekyll&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/2011/12/27/TP-Link-WR703N-OpenWRT-MPD-et-al.html&amp;quot;&amp;gt;First encounters with OpenWRT on the TP-Link WR703N&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    ``
  &amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we have another example of liquid extensions, this is a for loop. There is a standard array of all the posts in the site, we&amp;#8217;re looping through them and creating an unordered list of each one with links to their location attached to their titles.&lt;/p&gt;

&lt;p&gt;Now we&amp;#8217;ve created all the files we need to get up and running. You can type a test post with the title &amp;#8216;2012-08-12-title.md&amp;#8217; where &amp;#8216;title&amp;#8217; is anything you want it to be separated with hyphens. Type this into it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ---
  title: test post
  --- 

  This is a post&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ jekyll --server&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will run jekyll generating the site in html whilst also serving it at the address: &amp;#8216;localhost:4000&amp;#8217;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>First encounters with OpenWRT on the TP-Link WR703N</title>
   <link href="http://willprice.github.com/2011/12/27/TP-Link-WR703N-OpenWRT-MPD-et-al.html"/>
   <updated>2011-12-27T00:00:00+00:00</updated>
   <id>http://willprice.github.com/2011/12/27/TP-Link-WR703N-OpenWRT-MPD-et-al</id>
   <content type="html">&lt;p&gt;I bought a TP-Link WR703N &lt;span&gt;1&lt;/span&gt;, it&amp;#8217;s a little router meant to be used in conjunction with a 3G Modem, it works as an access point broadcasting a wireless connection allowing multiple devices to utilize the modem at once (quite a clever idea, however, not one I&amp;#8217;m interested in using), hence I decided to flash it with OpenWRT &lt;span&gt;2&lt;/span&gt;&lt;/p&gt;

&lt;h2 id='specs'&gt;Specs:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;RAM - 32Mb&lt;/em&gt;&lt;/li&gt;

&lt;li&gt;ROM - 4Mb&lt;/li&gt;

&lt;li&gt;USB port (USB2)&lt;/li&gt;

&lt;li&gt;CPU - Atheros AR7240 - 400Mhz&lt;/li&gt;

&lt;li&gt;Wireless - Atheros AR9331 - b/g/n*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Powered by a micro usb port, 5.7cm x 5.7cm, serial interface. (These are just the basics, more here &lt;span&gt;3&lt;/span&gt;)&lt;/p&gt;

&lt;p&gt;OpenWRT Install: The device comes preinstalled with Chinese firmware, I connected the router via ethernet and configured Arch to have the IP 192.168.1.2 (in /etc/rc.conf) but you could also easily use wifi to upload the new firmware.&lt;/p&gt;

&lt;p&gt;After connecting to the router, keep hovering over the menu items, the page file names are in English, keep expanding the drop down menus until you find one with a page name similar to &amp;#8216;software upgrade&amp;#8217;, something along those lines (I do believe it&amp;#8217;s in one of the last sections). Go to the OpenWRT wiki and download the &amp;#8216;vanilla&amp;#8217; firmware for the router, upload this, once the router has upgraded the firmware, it should reboot and openWRT will have been installed&lt;/p&gt;

&lt;p&gt;Having now installed the OpenWRT firmware, you can connect to the router via the ethernet port if you configure your computer&amp;#8217;s IP to be 192.168.1.2, telnet into the router using: telnet 192.168.1.1 There you are presented with the CLI of the router where you can start manipulating things. Use opkg update to update the packages list and opkg install &lt;em&gt;package name&lt;/em&gt; to install applications&lt;/p&gt;

&lt;p&gt;These are simply the basics and much more informative instructions can be found on the OpenWRT forums and wiki.&lt;/p&gt;

&lt;p&gt;OpenWRT Configuration: I wanted to use the router as a wireless client (i.e. similar to a computer), I used the following network configurations&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/etc/config/network&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    `config &amp;#39;interface&amp;#39; &amp;#39;loopback&amp;#39;
     option &amp;#39;ifname&amp;#39; &amp;#39;lo&amp;#39;
     option &amp;#39;proto&amp;#39; &amp;#39;static&amp;#39;
     option &amp;#39;ipaddr&amp;#39; &amp;#39;127.0.0.1&amp;#39;
     option &amp;#39;netmask&amp;#39; &amp;#39;255.0.0.0&amp;#39;


    config &amp;#39;interface&amp;#39; &amp;#39;lan&amp;#39;
     option &amp;#39;ifname&amp;#39; &amp;#39;eth0&amp;#39;
     option &amp;#39;type&amp;#39; &amp;#39;bridge&amp;#39;
     option &amp;#39;proto&amp;#39; &amp;#39;static&amp;#39;
     option &amp;#39;ipaddr&amp;#39; &amp;#39;192.168.1.1&amp;#39;
     option &amp;#39;netmask&amp;#39; &amp;#39;255.255.255.0&amp;#39;


    config &amp;#39;interface&amp;#39; &amp;#39;wan&amp;#39;
     option &amp;#39;proto&amp;#39; &amp;#39;dhcp&amp;#39;

    /etc/config/wireless
    Config &amp;#39;wifi-device&amp;#39; &amp;#39;radio0&amp;#39;
     option &amp;#39;type&amp;#39; &amp;#39;mac80211&amp;#39;
     option &amp;#39;channel&amp;#39; &amp;#39;11&amp;#39;
     option &amp;#39;macaddr&amp;#39; &amp;#39;38:83:45:a2:14:18&amp;#39;
     option &amp;#39;hwmode&amp;#39; &amp;#39;11ng&amp;#39;
     option &amp;#39;htmode&amp;#39; &amp;#39;HT20&amp;#39;
     list &amp;#39;ht_capab&amp;#39; &amp;#39;SHORT-GI-20&amp;#39;
     list &amp;#39;ht_capab&amp;#39; &amp;#39;SHORT-GI-40&amp;#39;
     list &amp;#39;ht_capab&amp;#39; &amp;#39;RX-STBC1&amp;#39;
     list &amp;#39;ht_capab&amp;#39; &amp;#39;DSSS_CCK-40&amp;#39;

    config &amp;#39;wifi-iface&amp;#39;
     option &amp;#39;device&amp;#39; &amp;#39;radio0&amp;#39;
     option &amp;#39;network&amp;#39; &amp;#39;wan&amp;#39; #Set the adapter to act as a wide area network -- not sure why
     option &amp;#39;ssid&amp;#39; &amp;#39;Price LAN&amp;#39;
     option &amp;#39;key&amp;#39; &amp;#39;*******&amp;#39;
     option &amp;#39;encryption&amp;#39; &amp;#39;psk2&amp;#39; # My network uses psk2 security
     option &amp;#39;mode&amp;#39; &amp;#39;sta&amp;#39; #Setup client mode`&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the section &amp;#8216;config &amp;#8216;wifi-iface&amp;#8221; I&amp;#8217;ve setup the router to act as a client by setting the &amp;#8216;mode&amp;#8217; to &amp;#8216;sta&amp;#8217; which sets the router to act as a client rather than an access point.&lt;/p&gt;

&lt;p&gt;USB Support: I needed USB support as the router only has a 4mb flash which isn&amp;#8217;t sufficient to install transmission, mpd, mpc etc. I updated /etc/opkg.conf to remedy this (look at the wiki page on opkg, there is a section on how to do this).&lt;/p&gt;

&lt;p&gt;Now I could install to my memory stick using the command opkg -d usb install &lt;em&gt;package name&lt;/em&gt; This usually works fairly well, I had to update my PATH variable in /etc/profile to reflect the new install directories.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve also played around in /etc/rc.local setting up some startup applications. I&amp;#8217;ve got mpd, transmission-daemon and mpc (adding playlists) on startup.&lt;/p&gt;

&lt;h1 id='links'&gt;Links:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;1&lt;/span&gt; - $22/£15 - http://www.volumerates.com/product/genuine-tp-link-tl-wr703n-150m-11n-mini-wifi-wireless-router-for-instant-wifi-connection-99273&lt;/li&gt;

&lt;li&gt;&lt;span&gt;2&lt;/span&gt; - https://openwrt.org/&lt;/li&gt;

&lt;li&gt;&lt;span&gt;3&lt;/span&gt; - OpenWRT wiki page on WR703N - http://wiki.openwrt.org/toh/tp-link/tl-wr703n&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 
</feed>
